name: CI/CD - DTM App on EKS

on:
  push:
    branches: [ master ]

env:
  AWS_REGION: us-east-2
  CLUSTER_NAME: dtm-cluster
  REGISTRY: docker.io
  REPO: yakiradela
  KUBECONFIG: $HOME/.kube/config

jobs:
  deploy:
    name: Full Deployment Pipeline
    runs-on: ubuntu-latest

    steps:
      ####################################################################
      # שלב 1: Clone הקוד והגדרת הרשאות
      ####################################################################
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      ####################################################################
      # שלב 2: התקנת כלים (eksctl, kubectl, helm)
      ####################################################################
      - name: Install eksctl and kubectl
        run: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin

          curl -LO "https://dl.k8s.io/release/v1.29.0/bin/linux/amd64/kubectl"
          chmod +x kubectl && sudo mv kubectl /usr/local/bin

      - name: Install Helm
        run: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      ####################################################################
      # שלב 3: Terraform - תשתיות
      ####################################################################
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Bootstrap
        working-directory: distributed-task-manager/infra/boostrap
        run: |
          terraform init
          terraform apply -auto-approve -var="aws_region=${{ env.AWS_REGION }}"

      - name: Terraform Init & Apply Infra
        working-directory: distributed-task-manager/infra
        run: |
          terraform init
          terraform apply -auto-approve -var-file=terraform.tfvars

      ####################################################################
      # שלב 4: Build & Push Docker Images
      ####################################################################
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Images
        run: |
          for service in api-gateway tasks-service users-service; do
            docker build -t $REGISTRY/$REPO/$service:latest ./distributed-task-manager/services/$service
            docker push $REGISTRY/$REPO/$service:latest
          done

      ####################################################################
      # שלב 5: התחברות ל-EKS והרשאות IAM
      ####################################################################
      - name: Configure kubeconfig using eksctl
        run: |
          eksctl utils write-kubeconfig --cluster $CLUSTER_NAME --region $AWS_REGION
          echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV

      - name: Add GitHub IAM user to EKS (if not exists)
        run: |
          eksctl create iamidentitymapping \
            --cluster $CLUSTER_NAME \
            --region $AWS_REGION \
            --arn arn:aws:iam::557690607676:user/yakiradela \
            --username yakiradela \
            --group system:masters || true

      - name: Verify EKS nodegroups
        run: eksctl get nodegroup --cluster $CLUSTER_NAME --region $AWS_REGION

      ####################################################################
      # שלב 6: פריסת microservices עם Helm
      ####################################################################
      - name: Deploy Microservices with Helm
        run: |
          for service in api-gateway tasks-service users-service; do
            helm upgrade --install $service \
              ./charts/$service \
              --values ./charts/$service/values.yaml \
              --namespace distributed-task-manager --create-namespace
          done

      ####################################################################
      # שלב 7: פריסת רכיבי תשתית נוספים
      ####################################################################
      - name: Create Namespace
        run: kubectl apply -f distributed-task-manager/k8s/namespace.yaml

      - name: Apply Vault Agent Config
        run: kubectl apply -f distributed-task-manager/k8s/vault-agent-config.yaml

      - name: Deploy MongoDB
        run: helm upgrade --install mongodb ./charts/mongodb --namespace distributed-task-manager

      - name: Deploy Monitoring Stack
        run: helm upgrade --install monitoring ./charts/grafana-prometheus --namespace distributed-task-manager

      - name: Apply Ingress Rules
        run: kubectl apply -f distributed-task-manager/k8s/ingress.yaml
