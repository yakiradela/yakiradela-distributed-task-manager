name: CI/CD - DTM App on EKS

on:
  push:
    branches: [ master ]

env:
  AWS_REGION: us-east-2
  CLUSTER_NAME: dtm-cluster
  REGISTRY: docker.io
  REPO: yakiradela
  KUBECONFIG: /home/runner/.kube/config

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    ####################################################################
    # שלב 1: Clone והרשאות AWS
    ####################################################################
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    ####################################################################
    # שלב 2: התקנת כלים - terraform אלטרנטיבי, kubectl, helm, eksctl
    ####################################################################
    - name: Install tools (terraform, kubectl, helm, eksctl, unzip & awscli)
      run: |
        # Terraform
        curl -Ls https://releases.hashicorp.com/terraform/1.6.0/terraform_1.6.0_linux_amd64.zip -o terraform.zip
        unzip terraform.zip
        sudo mv terraform /usr/local/bin/

        # kubectl
        KUBECTL_VERSION=$(curl -L -s https://dl.k8s.io/release/stable.txt)
        curl -LO "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

        # Helm
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

        # unzip + awscli
        sudo apt-get update
        sudo apt-get install -y unzip curl
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o awscliv2.zip
        unzip awscliv2.zip
        sudo ./aws/install

        # eksctl
        curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" \
          | tar xz -C /tmp
        sudo mv /tmp/eksctl /usr/local/bin/

    - name: Verify tools
      run: |
        terraform version
        kubectl version --client
        helm version
        aws --version
        eksctl version

    ####################################################################
    # שלב 3: יצירת תשתית עם Terraform (VPC + RDS)
    ####################################################################
    - name: Terraform: init & apply VPC + RDS
      working-directory: distributed-task-manager/infra
      run: |
        terraform init
        terraform apply -auto-approve -target=module.vpc -target=module.rds

    ####################################################################
    # שלב 4: יצירת EKS עם eksctl
    ####################################################################
    - name: Create EKS cluster via eksctl
      run: |
        eksctl create cluster \
          --name $CLUSTER_NAME \
          --region $AWS_REGION \
          --vpc-private-subnets=$(terraform output -raw vpc_private_subnets) \
          --vpc-public-subnets=$(terraform output -raw vpc_public_subnets) \
          --nodegroup-name dev-nodes \
          --node-type t3.medium \
          --nodes 2 \
          --nodes-min 1 \
          --nodes-max 3 \
          --managed

    ####################################################################
    # שלב 5: Build & Push Docker Images
    ####################################################################
    - name: Docker Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Microservice Images
      run: |
        set -e
        for service in api-gateway tasks-service users-service; do
          docker build -t $REGISTRY/$REPO/$service:latest ./distributed-task-manager/services/$service
          docker push $REGISTRY/$REPO/$service:latest
        done

    ####################################################################
    # שלב 6: התחברות לקלאסטר ומימוש פריסה
    ####################################################################
    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

    - name: Deploy with Helm
      run: |
        kubectl get namespace distributed-task-manager || kubectl create namespace distributed-task-manager
        for service in api-gateway tasks-service users-service mongodb monitoring; do
          helm upgrade --install $service ./charts/$service --values ./charts/$service/values.yaml --namespace distributed-task-manager
        done

    - name: Apply K8s definitions
      run: |
        kubectl apply -f distributed-task-manager/k8s/vault-agent-config.yaml
        kubectl apply -f distributed-task-manager/k8s/ingress.yaml

    ####################################################################
    # שלב 7: בדיקות והדפסה
    ####################################################################
    - name: List Helm Releases
      run: helm list -n distributed-task-manager

    - name: Get All K8s Resources
      run: kubectl get all -n distributed-task-manager
